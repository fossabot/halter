# This workflow will install Python dependencies, run tests and lint with a single version of Python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: üì¶ Install uv
        run: pip install uv

      - name: create venv
        run: uv venv

      - name: üì¶ Install dependencies
        run: uv pip install -r requirements.txt

      - name: ‚úÖ Run tests with coverage
        run: |
          uv pip install pytest pytest-cov
          uv run pytest --cov=src --cov-report=xml

      - name: üì§ Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-windows:
    runs-on: windows-latest
    needs: test
    if: success()
    steps:
      - uses: actions/checkout@v4

      # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Visual Studio Build Tools (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
      - name: Install Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-version: 'latest'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Set UTF-8 encoding
        run: chcp 65001

      - name: Install Flet
        run: pip install flet

      - name: Build app
        run: flet build windows -v

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: halter-windows
          path: dist/windows/**

  build-linux:
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
      
      - name: Install GTk-libs
        run: sudo apt-get update &&
             sudo apt-get install -y libgtk-3-dev

      - name: Install Flet
        run: pip install flet

      - name: Build app
        run: flet build linux -v

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: halter-linux
          path: dist/linux/**

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: halter-windows
          path: ./halter-windows

      - uses: actions/download-artifact@v4
        with:
          name: halter-linux
          path: ./halter-linux

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            ./halter-windows/**
            ./halter-linux/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
